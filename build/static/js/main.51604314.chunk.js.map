{"version":3,"sources":["components/unicorngym.png","components/Navigation.js","components/FederatedSignIn.js","components/MainRequest.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","props","Navbar","bg","variant","expand","Brand","Nav","className","style","width","token","display","justifyContent","Button","textAlign","float","onClick","Auth","signOut","FederatedSignIn","useState","email","setEmail","password","setPassword","isValid","setIsValid","event","a","preventDefault","signIn","res","console","log","Row","Col","sm","Card","Body","Title","Alert","Text","Form","onSubmit","Group","size","controlId","Control","autoFocus","type","value","placeholder","onChange","e","target","block","disabled","length","color","federatedSignIn","provider","federatedIdName","MainRequest","json","setJson","show","setShow","tkn","setTkn","getData","response","handleClose","myInit","headers","Accept","Authorization","API","get","user","Image","alignSelf","src","unicorngym","roundedCircle","decoded","jwt_decode","JSON","stringify","highlight","code","languages","js","padding","fontFamily","fontSize","Modal","onHide","Header","Spinner","animation","Footer","config","region","userPoolId","userPoolWebClientId","identityPoolId","oauth","domain","scope","redirectSignIn","redirectSignOut","responseType","endpoints","name","endpoint","Amplify","configure","App","setToken","setUser","currentAuthenticatedUser","userDetails","attributes","parse","useEffect","Hub","listen","payload","data","currentSession","then","session","catch","err","userToken","idToken","jwtToken","getUserInfo","Container","fluid","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.51604314.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/unicorngym.869dd411.png\";","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: MIT-0\n\nimport React from \"react\";\nimport {Navbar, Button, Nav} from \"react-bootstrap\";\nimport {Auth} from \"aws-amplify\";\n\nfunction Navigation(props) {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n      <Navbar.Brand>\n        &nbsp; AWS Cognito Unicorn Gym\n      </Navbar.Brand>\n      <Nav className=\"justify-content-end\" style={{ width: \"100%\" }}>\n      {props.token ? (\n        <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n        <Button style={{textAlign: \"right\", float: 'right'}} variant=\"danger\" onClick={() => Auth.signOut()}>\n          Sign Out\n        </Button>\n        </div>\n      ) : null}\n      </Nav>\n      \n    </Navbar>\n  );\n}\n\nexport default Navigation;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: MIT-0\n\nimport React, {useState}from \"react\";\nimport {Card, Row, Col, Button, Form, Alert} from \"react-bootstrap\";\nimport {Auth} from \"aws-amplify\";\n\nfunction FederatedSignIn(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    try {\n      const res = await Auth.signIn(email, password);\n      console.log(\"res \"+res);\n  } catch (error) {\n      console.log('error signing in', error);\n      setIsValid(false);\n  }\n  }\n\n  return (\n    <Row>\n      <Col sm={3}></Col>\n      <Col sm={6}>\n        <Card style={{width: \"100%\"}}>\n          <Card.Body>\n            <Card.Title>\n            {isValid \n      ? <p></p>\n      : <Alert variant=\"danger\">Oops! Invalid Username or Password</Alert>\n}\n              <h3 style={{textAlign: \"center\"}}>Welcome</h3>\n            </Card.Title>\n            <Card.Text style={{textAlign: \"center\"}}>\n              In order to proceed please authenticate\n            </Card.Text>\n            <Row>\n              <Col sm={3}></Col>\n              <Col sm={6}>\n                {\" \"}\n                <div className=\"Login\">\n      <Form onSubmit={handleSubmit}>\n        <Form.Group size=\"lg\" controlId=\"email\">\n          \n          <Form.Control\n            autoFocus\n            type=\"email\"\n            value={email}\n            placeholder=\"username\"\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group size=\"lg\" controlId=\"password\">\n          \n          <Form.Control\n            type=\"password\"\n            value={password}\n             placeholder=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Button block variant=\"success\" type=\"submit\" disabled={!validateForm()}>\n          Sign In\n        </Button>\n      </Form>\n    </div>\n              </Col>\n              <Col sm={3}> </Col>\n            </Row>\n            <Card.Text style={{textAlign: \"center\"}}>\n              No Account? <a style={{color: \"blue\"}}>Sinup Here</a>\n            </Card.Text>\n            <Row>\n              <Col sm={3}></Col>\n              <Col sm={6}>\n                {\" \"}\n                <Button\n                  block\n                  variant=\"primary\"\n                  onClick={() =>\n                    Auth.federatedSignIn({provider: props.federatedIdName})\n                  }\n                >\n                  Sign In with Okta\n                </Button>\n              </Col>\n              <Col sm={3}> </Col>\n            </Row>\n          </Card.Body>\n        </Card>\n      </Col>\n      <Col sm={3}></Col>\n    </Row>\n  );\n}\n\nexport default FederatedSignIn;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: MIT-0\n\nimport React, {useState} from \"react\";\nimport {Card, Row, Col, Button, Modal, Spinner, Image} from \"react-bootstrap\";\nimport {API} from \"aws-amplify\";\nimport unicorngym from './unicorngym.png';\nimport jwt_decode from \"jwt-decode\";\nimport Editor from 'react-simple-code-editor';\nimport { highlight, languages } from 'prismjs/components/prism-core';\nimport 'prismjs/components/prism-clike';\nimport 'prismjs/components/prism-javascript';\n\nfunction MainRequest(props) {\n  const [json, setJson] = useState(null);\n  const [show, setShow] = useState(false);\n  const [tkn, setTkn] = useState(\"\");\n\n  async function handleSubmit() {\n    //setShow(true);\n    const response = await getData();\n    setTkn(response);\n  }\n\n  function handleClose() {\n    setJson(null);\n    setShow(!show);\n  }\n\n  function decodeToken(){\n    var decoded = jwt_decode(props.token);\n    console.log(decoded);\n    setTkn(decoded);\n  }\n\n  function getData() {\n    const apiName = \"tokenvalidator\";\n    const path = \"/dev/products\";\n    const myInit = {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Authorization: props.token,\n        \"Access-Control-Allow-Origin\" : \"*\", \n        \"Access-Control-Allow-Methods\": \"*\",\n        \"Access-Control-Allow-Headers\": \"*\"\n      }\n    };\n    return API.get(apiName, path, myInit);\n  }\n\n  return (\n    <>\n      <Row>\n        <Col sm={3}></Col>\n        <Col sm={6}>\n          <Card style={{width: \"100%\"}}>\n            <Card.Body>\n              <Card.Title>\n                <p style={{textAlign: \"center\", color: \"green\"}}>Hello {props.user ? (props.user.email) : (\" \")}</p>\n              </Card.Title>\n              <Row>\n                <Col sm={2}></Col>\n                <Col sm={8}>\n                  {\" \"}\n                  <p style={{textAlign: \"center\", color: \"red\"}}>{props.user ? (\"Welcome to AWS Cognito Unicorn Gym\") : (\" \")}</p>\n                </Col>\n                <Col sm={2}> </Col>\n              </Row>\n              <Row>\n              <Col sm={2}></Col>\n                <Col sm={8}>\n                {\" \"}\n                <Image style={{width: \"50%\", alignSelf: 'center'}} src={unicorngym} roundedCircle ></Image>\n                </Col>\n                <Col sm={8}>\n                <Button variant=\"success\" onClick={decodeToken}>\n            View my Token\n          </Button>{\" \"}{\" \"}{\" \"}{\" \"}{\" \"}{\" \"}{\" \"}{\" \"}{\" \"}\n          <Button variant=\"primary\" onClick={handleSubmit}>\n            View Products\n          </Button>\n                </Col>\n                <Col sm={8}>\n        <Editor\n        value={tkn?(JSON.stringify(tkn)):(\"\")}\n        highlight={code => highlight(code, languages.js)}\n        padding={10}\n        style={{\n          fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n          fontSize: 12,\n        }}\n      />\n        </Col>\n                <Col sm={2}> </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col sm={3}></Col>\n      </Row>\n      <Modal size=\"lg\" show={show} onHide={handleClose}>\n        <Modal.Header>\n          <Modal.Title>\n            <h3 style={{textAlign: \"center\"}}>Response</h3>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {json ? (\n            <p>Here is the response: {json}</p>\n          ) : (\n            <h3 style={{textAlign: \"center\"}}>\n              <Spinner animation=\"border\" variant=\"primary\" />\n            </h3>\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default MainRequest;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: MIT-0\n\nimport React, {useEffect, useState, Fragment} from \"react\";\nimport Amplify, {Auth, Hub, API} from \"aws-amplify\";\nimport {Container} from \"react-bootstrap\";\n\nimport Navigation from \"./components/Navigation.js\";\nimport FederatedSignIn from \"./components/FederatedSignIn.js\";\nimport MainRequest from \"./components/MainRequest.js\";\nimport \"./App.css\";\n\nconst config = {\n  Auth: {\n    region: \"us-east-1\",\n    userPoolId: \"us-east-1_zB9i2DNdc\",\n    userPoolWebClientId: \"lm19e41l9t50e1a414ie68ogm\",\n    identityPoolId: \"us-east-1:fe36d2cc-1c95-4d64-95d8-3a3fd2e88d70\",\n    oauth: {\n      domain: \"unicorngymdemo-dev.auth.us-east-1.amazoncognito.com\",\n      scope: [\"email\", \"openid\", \"aws.cognito.signin.user.admin\", \"profile\"],\n      redirectSignIn: \"https://dev.d1we7at3yfgko.amplifyapp.com/\",\n      redirectSignOut: \"https://dev.d1we7at3yfgko.amplifyapp.com/\",\n      responseType: \"code\"\n    }\n  } ,\n  API: {\n    endpoints: [\n      {\n        name: \"tokenvalidator\",\n        endpoint: \"https://vs08pbf9rk.execute-api.us-east-1.amazonaws.com\"\n      }\n    ]\n  } \n};\nAmplify.configure(config);\n\nAPI.configure(config);\n\nconst federatedIdName =\n  \"Okta\";\n\nfunction App() {\n  const [token, setToken] = useState(null);\n  const [user, setUser] = useState(null);\n\n\n  useEffect(() => {\n    Hub.listen(\"auth\", ({payload: {event, data}}) => {\n      switch (event) {\n        case \"signIn\":\n        case \"cognitoHostedUI\":\n          setToken(\"grating...\");\n          getToken().then(userToken => setToken(userToken.idToken.jwtToken));\n          getUserInfo();\n          break;\n        case \"signOut\":\n          setToken(null);\n          break;\n        case \"signIn_failure\":\n        case \"cognitoHostedUI_failure\":\n          console.log(\"Sign in failure\", data);\n          break;\n        default:\n          break;\n      }\n    });\n  }, []);\n\n  function getToken() {\n    return Auth.currentSession()\n      .then(session => session)\n      .catch(err => console.log(err));\n  }\n\n  async function getUserInfo() {\n    const userDetails = await Auth.currentAuthenticatedUser();\n    console.log('attributes:', userDetails.attributes);\n    setUser(JSON.parse(JSON.stringify(userDetails.attributes)));\n  }\n\n  return (\n    <Fragment>\n      <Navigation token={token} />\n      <Container fluid>\n        <br />\n        {token ? (\n          <MainRequest token={token} user={user}/>\n        ) : (\n          <FederatedSignIn federatedIdName={federatedIdName} />\n        )}\n      </Container>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: MIT-0\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: MIT-0\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"@aws-amplify/ui/dist/style.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}